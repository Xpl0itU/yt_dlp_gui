name: Build binaries
on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [macos-12, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Check-out repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: 'x64'
          cache: 'pip'
          cache-dependency-path: |
            **/requirements.txt
            **/requirements.packaging.txt

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements.packaging.txt
      
      - name: Add FFMpeg Homebrew Tap FFMpeg on macOS
        run: |
          brew tap homebrew-ffmpeg/ffmpeg
        if: runner.os != 'Windows'
      
      - name: Install FFMpeg on macOS
        uses: tecolicom/actions-use-homebrew-tools@v1
        with:
          tools: homebrew-ffmpeg/ffmpeg/ffmpeg
        if: runner.os != 'Windows'

      - uses: FedericoCarboni/setup-ffmpeg@v3
        id: setup-ffmpeg
        with:
          ffmpeg-version: release
          architecture: ''
          github-token: ${{ github.server_url == 'https://github.com' && github.token || '' }}
        if: runner.os == 'Windows'

      - name: Build Executable
        run: |
          pyinstaller --clean --noconfirm yt_dlp_gui.spec
        if: runner.os != 'Windows'
      
      - name: Build Executable
        run: |
          pyinstaller --clean --noconfirm yt_dlp_gui.spec
          Compress-Archive -Path dist/ -DestinationPath yt_dlp_gui-Windows.zip
        if: runner.os == 'Windows'
      
      - name: Cleanup
        run: |
          rm -rf dist/yt_dlp_gui
          tar czf yt_dlp_gui-macOS.tar.gz dist/
        if: runner.os == 'macOS'

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Build
          path: |
            yt_dlp_gui-${{ runner.os }}.*